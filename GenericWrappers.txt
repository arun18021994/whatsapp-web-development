package wrappers;

import java.io.File;
import java.io.IOException;

import java.util.Set;

import javax.swing.plaf.ActionMapUIResource;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.ElementClickInterceptedException;
import org.openqa.selenium.ElementNotInteractableException;
import org.openqa.selenium.ElementNotSelectableException;
import org.openqa.selenium.ElementNotVisibleException;
import org.openqa.selenium.InvalidArgumentException;
import org.openqa.selenium.NoAlertPresentException;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.NoSuchFrameException;
import org.openqa.selenium.NoSuchWindowException;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.SessionNotCreatedException;
import org.openqa.selenium.StaleElementReferenceException;
import org.openqa.selenium.WebDriverException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.ie.InternetExplorerDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.ui.Select;


public class GenericWrappers implements Wrappers {
	RemoteWebDriver driver;

	public void invokeApp(String browser, String url) {
		// TODO Auto-generated method stub
		try {
			if(browser.equalsIgnoreCase("chrome")) {
				System.setProperty("webdriver.chrome.driver","./drivers/chromedriver.exe");
			    driver = new ChromeDriver();
			}else if (browser.equalsIgnoreCase("firefox")){
				System.setProperty("webdriver/gecko/driver","./drivers/geckodriver.exe");
			    driver = new FirefoxDriver();
			}else if (browser.equalsIgnoreCase("ie")) {
				System.setProperty("webdriver.ie.driver","./drivers/IEDriverserver.exe");
			    driver = new InternetExplorerDriver();
			}
			  driver.manage().window().maximize();
			  driver.get(url);
			  System.out.println("The browser "+browser+" is lauched with the given URL "+url+ " successfully");
			  
		} catch (SessionNotCreatedException e) {
			// TODO Auto-generated catch block
			System.err.println("The browser "+browser+"is not launched due to session not created error");
		}catch (InvalidArgumentException e) {
			// TODO: handle exception
			System.err.println("The browser "+browser+"is not loaded with the URL "+url+" as it not contains http/https");
		} catch (WebDriverException e) {
			// TODO: handle exception
			System.err.println("The browser "+browser+" is not lauched with the URL "+url+" due to unknown error");
		}finally {
			takeSnap();
			
		}
          
	}

	public void enterById(String idValue, String data) {
		// TODO Auto-generated method stub
      try {
		driver.findElementById(idValue).sendKeys(data);
		System.out.println("The Element with id "+idValue+" is successfully entered with the data "+data);
	}catch (NoSuchElementException e) {
		// TODO: handle exception
		System.err.println("The Element with id "+idValue+" is not found in the DOM");
	} catch (ElementNotVisibleException e) {
		// TODO Auto-generated catch block
		System.err.println("The Element with id "+idValue+" is not visibe in the Application ");
	} catch (ElementNotInteractableException e) {
		// TODO: handle exception
		System.err.println("The Element with id "+idValue+" is not interactable with the Application");
	} catch (StaleElementReferenceException e) {
		// TODO: handle exception
		System.err.println("The Element with id "+idValue+" is not stable in the Application");
	} catch (WebDriverException e) {
		// TODO: handle exception
		System.err.println("The Element with id "+idValue+" is not enetered with data "+data+" due to unknown Error");
	} finally {
		takeSnap();
	}
	
}

	public void enterByName(String nameValue, String data) {
		// TODO Auto-generated method stub
		try {
			driver.findElementByName(nameValue).sendKeys(data);
		    System.out.println("The Element with name "+nameValue+" is successfully entered with the data "+data);
		}catch (NoSuchElementException e) {
			// TODO: handle exception
	        System.err.println("The Element with name "+nameValue+" is not found in the DOM");
		}catch (ElementNotVisibleException e) {
			// TODO Auto-generated catch block
			System.err.println("The Element with name "+nameValue+" is not visible in the application");
		}catch (ElementNotInteractableException e) {
			// TODO: handle exception
		System.err.println("The Element with name "+nameValue+" is not interactable with the application");
		}catch (StaleElementReferenceException e) {
			// TODO: handle exception
		System.err.println("The Element with name "+nameValue+" is not stable in the application");	
		}catch (WebDriverException e) {
			// TODO: handle exception
			System.err.println("The Element with name "+nameValue+" is not entered with the data "+data+" due to unknown Error");
		}finally {
			takeSnap();
		}
   }

	public void enterByXpath(String xpathValue, String data) {
		// TODO Auto-generated method stub
		try {
			driver.findElementByXPath(xpathValue).sendKeys(data);
			System.out.println("The Element with xpath"+xpathValue+" is successfully entered with the data "+data);
		} catch (NoSuchElementException e) {
			// TODO Auto-generated catch block
		    System.err.println("The Element with xpath "+xpathValue+" is not found in the DOM");
		} catch (ElementNotVisibleException e) {
			// TODO: handle exception
			System.err.println("The Element with xpath "+xpathValue+" is not visible in the application");
		}catch (ElementNotInteractableException e) {
			// TODO: handle exception
			System.err.println("The Element with xpath "+xpathValue+" is not interactable with the application");
		}catch (StaleElementReferenceException e) {
			// TODO: handle exception
			System.err.println("The Element with xpath "+xpathValue+" is not stable in the application");
		}catch (WebDriverException e) {
			// TODO: handle exception
			System.err.println("The Element with xpath "+xpathValue+" is not entered with the data "+data+" due to unknown Error");
		}finally {
		takeSnap();	
		}
	}

	public void verifyTitle(String title) {
		// TODO Auto-generated method stub
		String actualTitle = null;
		try {
			 actualTitle = driver.getTitle();
			if(actualTitle.equals(title)) {
				System.out.println("The title for the page "+actualTitle+" is matched with the expected title "+title);
			}else {
				System.err.println("The title for the page "+actualTitle+" is not matched with expected title "+title);
			}
		} catch (WebDriverException e) {
			// TODO Auto-generated catch block
			System.err.println("The title for the page "+actualTitle+" is not verfied with the expected text due to unknown Errors");
		}finally {
			takeSnap();
		}
	}

	public void verifyTextById(String id, String text) {
		// TODO Auto-generated method stub
		String actualText = null;
		try {
	          actualText = driver.findElementById(id).getText();
			if(actualText.equals(text)) {
				System.out.println("The element with the id "+id+" its holding the text "+actualText+" is matched with the expected text "+text);
			}else {
				System.err.println("The element with the id "+id+" its holding the text "+actualText+" is not matched with expected text "+text);
			}
		} catch (NoSuchElementException e) {
			// TODO Auto-generated catch block
			System.err.println("The Element with id "+id+" is found in the DOM");
		}catch (ElementNotVisibleException e) {
			// TODO: handle exception
		    System.err.println("The Element with the id "+id+" is not visible in the application");
		}catch (ElementNotInteractableException e) {
			// TODO: handle exception
			System.err.println("The Element with id "+id+" is not interactable with the application");
		}catch (StaleElementReferenceException e) {
			// TODO: handle exception
			System.err.println("The Element with id "+id+" is not stable in the application");
		}catch (WebDriverException e) {
			// TODO: handle exception
			System.err.println("The Element with id "+id+" and its holding text "+ actualText +" is not verified with expected text "+text+" due to unknown errors");
		}finally {
			takeSnap();
		}
	}

	public void verifyTextByXpath(String xpath, String text) {
		// TODO Auto-generated method stub
		String actualText =null;
		try {
			 actualText = driver.findElementByXPath(xpath).getText();
			if(actualText.equals(text)){
			System.out.println("The element with the xpath "+xpath+" its holding the text "+actualText+" is matched with the expected text "+text);	
			}else {
			System.err.println("The element with the xpath "+xpath+" its holding the text "+actualText+" is not matched with expected text "+text);
			}
		} catch (NoSuchElementException e) {
			// TODO Auto-generated catch block
			System.err.println("The Element with xpath "+xpath+" is not found in the DOM");
		} catch (ElementNotVisibleException e) {
			// TODO: handle exception
		   System.err.println("The Element with xpath "+xpath+" is not visible in the Application");
		}catch (ElementNotInteractableException e) {
			// TODO: handle exception
			System.err.println("The Element with xpath "+xpath+" is not interactable with the appplication");
		}catch (StaleElementReferenceException e) {
			// TODO: handle exception
			System.err.println("The Element with xpath "+xpath+" is not stable in the application");
		}catch (WebDriverException e) {
			// TODO: handle exception
			System.err.println("The Element with xpath "+xpath+"and its holding text "+actualText+" is not verified with the expectedText "+text+" due to unknown error");
		}finally {
			takeSnap();
		}
	}

	public void verifyTextContainsByXpath(String xpath, String text) {
		// TODO Auto-generated method stub
		String actualText=null;
		try {
		    actualText = driver.findElementByXPath(xpath).getText();
			if(actualText.contains(text)) {
			System.out.println("The Element with xpath "+xpath+" successfully contains the given text "+text+" in its holding text "+actualText);
			}else {
			System.err.println("The Element with xpath "+xpath+" as not contains the given text "+text+" in its holding text "+actualText);
			}
		}catch (NoSuchElementException e) {
			// TODO Auto-generated catch block
			System.err.println("The Element with xpath "+xpath+" is not found in the DOM");
		}catch (ElementNotVisibleException e) {
			// TODO: handle exception
			System.err.println("The Element with xpath "+xpath+" is not visible in the application");
		}catch (ElementNotInteractableException e) {
			// TODO: handle exception
			System.err.println("The Element with xpath "+xpath+" is not interactable with the application");
		}catch (StaleElementReferenceException e) {
			// TODO: handle exception
			System.err.println("The Element with xpath "+xpath+" is not stable in the application");
		}catch (WebDriverException e) {
			// TODO: handle exception
			System.err.println("The Element with xpath "+xpath+" is not verified wheather the holding text "+actualText+" contains expected text "+text+" or not due to unknown errors");
		}finally {
			takeSnap();
		}
	}

	public void clickById(String id) {
		// TODO Auto-generated method stub
		try {
			driver.findElementById(id).click();
			System.out.println("The Element with id "+id+" is successfully clicked in the application");
		} catch (NoSuchElementException e) {
			// TODO Auto-generated catch block
			System.err.println("The Element with id "+id+" is not found in the DOM");
		} catch (ElementNotVisibleException e) {
			// TODO: handle exception
			System.err.println("The element with id "+id+" is not visbile in the application");
		} catch (ElementClickInterceptedException e) {
			// TODO: handle exception
		     System.err.println("The element with id "+id+" is not clickable in the application");
		} catch (ElementNotInteractableException e) {
			// TODO: handle exception
			System.err.println("The element with the id "+id+" is not interactable with the application");
		}catch (StaleElementReferenceException e) {
			// TODO: handle exception
			System.err.println("The element with the id "+id+" is not stable in the application");
		}catch (WebDriverException e) {
			// TODO: handle exception
			System.err.println("The element with id "+id+" is not clickable in the application due to unknown errors");
		}finally {
			takeSnap();
		}
	}

	public void clickByClassName(String classVal) {
		// TODO Auto-generated method stub
     try {
		driver.findElementByClassName(classVal).click();
		System.out.println("The element with the class "+classVal+" is successfully clicked in the application");
     } catch (NoSuchElementException e) {
		// TODO Auto-generated catch block
		System.err.println("The element with the class "+classVal+" is not found in the DOM");
	} catch (ElementNotVisibleException e) {
		// TODO: handle exception
	   System.err.println("The element with the class "+classVal+" is not vissible in the application");
	}catch (ElementClickInterceptedException e) {
		// TODO: handle exception
		System.err.println("The element with the class "+classVal+" is not clickable in the application");
	}catch (ElementNotInteractableException e) {
		// TODO: handle exception
		System.err.println("The Element with class "+classVal+" is not interactable with the application");
	}catch (StaleElementReferenceException e) {
		// TODO: handle exception
		System.err.println("The element with the class "+classVal+" is not stable in the appplication");
	}catch (WebDriverException e) {
		// TODO: handle exception
		System.err.println("The element with class "+classVal+" is not clickable in the application due to unknown errors");
	}finally {
		takeSnap();
	 }
	}

	public void clickByName(String name) {
		// TODO Auto-generated method stub
		try {
			driver.findElementByName(name).click();
			System.out.println("The element with name "+name+" is successfully clicked in the application");
		} catch (NoSuchElementException e) {
			// TODO Auto-generated catch block
			System.err.println("The element with the name "+name+" is not found in the DOM");
		}catch (ElementNotVisibleException e) {
			// TODO: handle exception
			System.err.println("The element with name "+name+" is not vissible in the applicaction");
		}catch (ElementClickInterceptedException e) {
			// TODO: handle exception
			System.err.println("The element with name "+name+" is not clickable in the application");
		}catch (ElementNotInteractableException e) {
			// TODO: handle exception
			System.err.println("The element with name "+name+" is not interactable with application");
		}catch (StaleElementReferenceException e) {
			// TODO: handle exception
			System.err.println("The element with name "+name+" is not stable in the application");
		}catch (WebDriverException e) {
			// TODO: handle exception
			System.err.println("The element with name "+name+" is not clickable in the application due to unknown errors");
		}finally {
			takeSnap();
		}
	}

	public void clickByLink(String name) {
		// TODO Auto-generated method stub
		try {
			driver.findElementByLinkText(name).click();
			System.out.println("The element with LinkText "+name+" is successfully clicked in the application");
		} catch (NoSuchElementException e) {
			// TODO Auto-generated catch block
			System.err.println("The element with LinkText "+name+" is not found in the DOM");
		} catch (ElementNotVisibleException e) {
			// TODO: handle exception
			System.err.println("The element with LinkText "+name+" is not vissible in the application");
		} catch (ElementClickInterceptedException e) {
			// TODO: handle exception
			System.err.println("The element with LinkText "+name+" is not clickable in the appplication");
		}catch (ElementNotInteractableException e) {
			// TODO: handle exception
			System.err.println("The element with LinkText "+name+" is not interactable with application");
		}catch (StaleElementReferenceException e) {
			// TODO: handle exception
			System.err.println("The element with LinkText "+name+" is not stable in the application");
		}catch (WebDriverException e) {
			// TODO: handle exception
		    System.err.println("The element with LinkText "+name+" is not clickable in the application due to unknown errors");
		}finally {
			takeSnap();
		}
		
	}

	public void clickByLinkNoSnap(String name) {
		// TODO Auto-generated method stub
		try {
			driver.findElementByLinkText(name).click();
			System.out.println("The element with the LinkText "+name+" is successfully clicked in the application");
		} catch (NoSuchElementException e) {
			// TODO Auto-generated catch block
			System.err.println("The element with the LinkText "+name+" is not found in the DOM");
		} catch (ElementClickInterceptedException e) {
			// TODO: handle exception
			System.err.println("The element with the LinkText "+name+" is not clickable in the application");
		}catch (ElementNotVisibleException e) {
			// TODO: handle exception
			System.err.println("The element with the LinkText "+name+" is not visible in the application");
		}catch (ElementNotInteractableException e) {
			// TODO: handle exception
			System.err.println("The elemant with LinkText "+name+" is not interactable with the application");
		}catch (StaleElementReferenceException e) {
			// TODO: handle exception
			System.err.println("The element with LinknText "+name+" is not stable in the application");
		}catch (WebDriverException e) {
			// TODO: handle exception
			System.err.println("The element with LinkText "+name+" is not clickable in the application due to unknown error");
		}
		
	}

	public void clickByXpath(String xpathVal) {
		// TODO Auto-generated method stub
		try {
			driver.findElementByXPath(xpathVal).click();
			System.out.println("The element with the xpath "+xpathVal+" is successfully clicked in the application");
		} catch (NoSuchElementException e) {
			// TODO Auto-generated catch block
			System.err.println("The element with xpath "+xpathVal+" is not found in the DOM");
		}catch (ElementNotVisibleException e) {
			// TODO: handle exception
			System.err.println("The element with xpath "+xpathVal+" is not visible in the application");
		}catch (ElementNotInteractableException e) {
			// TODO: handle exception
			System.err.println("The element with xpath "+xpathVal+" is not interactable with the application");
		}catch (StaleElementReferenceException e) {
			// TODO: handle exception
			System.err.println("The element with xpath "+xpathVal+" is not stable in the application");
		}catch (WebDriverException e) {
			// TODO: handle exception
			System.err.println("The element with xpath "+xpathVal+" is not clicked due to unknown error");
		}finally {
			takeSnap();
		}
		
		}

	public void clickByXpathNoSnap(String xpathVal) {
		// TODO Auto-generated method stub
		try {
			driver.findElementByXPath(xpathVal);
			System.out.println("The element with xpath "+xpathVal+" is successfully clicked in the application");
		} catch (NoSuchElementException e) {
			// TODO Auto-generated catch block
			System.err.println("The element with xpath "+xpathVal+" is not found in the appplication");
		}catch (ElementNotVisibleException e) {
			// TODO: handle exception
			System.err.println("The element with xpath "+xpathVal+" is not visible in the application");
		}catch (ElementNotInteractableException e) {
			// TODO: handle exception
			System.err.println("The element with xpath "+xpathVal+" is not interactable with the application");
		}catch (StaleElementReferenceException e) {
			// TODO: handle exception
			System.err.println("The element with xpath "+xpathVal+" is not stable in the application");
		}catch (WebDriverException e) {
			// TODO: handle exception
			System.err.println("The element with the xpath "+xpathVal+" is not clicked due to unknown errors");
		}
		
	}

	public String getTextById(String idVal) {
		// TODO Auto-generated method stub
		String actualText = null;
		try {
			actualText = driver.findElementById(idVal).getText();
			System.out.println("The Element with id "+idVal+" and its holding text is successfully driven as "+actualText);
		} catch (NoSuchElementException e) {
			// TODO Auto-generated catch block
			System.err.println("The Element with id "+idVal+" is not found in the DOM");
		} catch (ElementNotVisibleException e) {
			// TODO: handle exception
			System.err.println("The Element with id "+idVal+" is not visible in the application");
		}catch (ElementNotInteractableException e) {
			// TODO: handle exception
			System.err.println("The Element with id "+idVal+" is not interactable with the application");
		}catch (StaleElementReferenceException e) {
			// TODO: handle exception
			System.err.println("The Element with id "+idVal+" is not stable in the application");
		}catch (WebDriverException e) {
			// TODO: handle exception
			System.err.println("The Element with id "+idVal+" and its holding text "+actualText+" is not driven due to unknown error");
		}finally {
			takeSnap();
		}
		return actualText;
	}

	public String getTextByXpath(String xpathVal) {
		// TODO Auto-generated method stub
		String actualText = null;
		try {
			actualText = driver.findElementByXPath(xpathVal).getText();
		System.out.println("The Element with xpath "+xpathVal+" and its holding text "+actualText+" is successfully driven");
		} catch (NoSuchElementException e) {
			// TODO Auto-generated catch block
			System.err.println("The element with xpath "+xpathVal+" is not found in the DOM");
		}catch (ElementNotVisibleException e) {
			// TODO: handle exception
			System.err.println("The Element with xpath "+xpathVal+" is not vissible in the application");
		}catch (ElementNotInteractableException e) {
			// TODO: handle exception
			System.err.println("The Element with xpath "+xpathVal+" is not interactable with the application");
		}catch (StaleElementReferenceException e) {
			// TODO: handle exception
			System.err.println("The Element with xpath "+xpathVal+" is not stable in the application");
		}catch (WebDriverException e) {
			// TODO: handle exception
			System.err.println("The Element with xpath "+xpathVal+" and its holding text "+actualText+" is not driven due to unknown error");
		}finally {
			takeSnap();
		}
		return actualText;
	}

	public void selectVisibileTextById(String id, String value) {
		// TODO Auto-generated method stub
		try {
			WebElement title = driver.findElementById(id);
			Select sel = new Select(title);
			sel.selectByVisibleText(value);
			System.out.println("The Element with id "+id+" and its dropdown visible Text "+value+" is successfully selected");
		} catch (NoSuchElementException e) {
			// TODO Auto-generated catch block
			System.err.println("The Element with id "+id+" and its dropdown visible text "+value+" is not found in the DOM");
		} catch (ElementNotVisibleException e) {
			System.err.println("The Element with id "+id+" and its dropdown visible text "+value+" is not visible in the application");
			// TODO: handle exception
		} catch (ElementNotInteractableException e) {
			// TODO: handle exception
			System.err.println("The Element with id "+id+" and its dropdown visible text "+value+" is not interactable with the appplication");
		}catch (ElementNotSelectableException e) {
			// TODO: handle exception 
			System.err.println("The Element with id "+id+" and its dropdown visible text "+value+" is not selectable in the application");
		}catch (StaleElementReferenceException e) {
			// TODO: handle exception
			System.err.println("The Element with id "+id+" and its dropdown visible text "+value+" are not stable in the application");
		}catch (WebDriverException e) {
			// TODO: handle exception
			System.err.println("The Element with id "+id+" and its dropdown visible text "+value+" are not selected due to unknown error");
		}finally {
			takeSnap();
		}
	}

	public void selectIndexById(String id, int value) {
		// TODO Auto-generated method stub
		try {
			WebElement title = driver.findElementById(id);
			Select sel = new Select(title);
			sel.selectByIndex(value);
			System.out.println("The Element with id "+id+" and its dropdown Index "+value+" is successfully selected");
			} catch (NoSuchElementException e) {
			// TODO Auto-generated catch block
			System.err.println("The Element with id "+id+" and its dropdown Index "+value+" is not found in the DOM");
		   }catch (ElementNotVisibleException e) {
			// TODO: handle exception
			System.err.println("The Element with id "+id+" and its dropdown index "+value+" is not visible in the application");
		   }catch (ElementNotInteractableException e) {
			// TODO: handle exception
			   System.err.println("The Element with id "+id+" and its dropdown index "+value+" is not interactable with the application");
		  }catch (ElementNotSelectableException e) {
			// TODO: handle exception
			System.err.println("The Element with id "+id+" and its dropdown index "+value+" is not selectable in the application");
		   }catch (WebDriverException e) {
			// TODO: handle exception
			System.err.println("The Element with id "+id+" and its dropdown index"+value+" is not selected due to unknown error");
		   }finally {
			takeSnap();
		}
	}

	public void switchToParentWindow() {
		// TODO Auto-generated method stub
		try {
			Set<String> actualWindowId = driver.getWindowHandles();
			
			for(String eachWinId:actualWindowId) {
			driver.switchTo().window(eachWinId);
			break;
			}
			System.out.println("The browser is successfully switched to the the parent window");
		}catch (NoSuchWindowException e) {
			// TODO: handle exception
			System.err.println("The browser is not switched to the parent Window due to the window not found/Exist");
		} catch (WebDriverException e) {
			// TODO: handle exception
			System.err.println("The browser is not switched to the parent window due to unknown error");
		}finally {
			takeSnap();
		}
	}

	 public void switchToLastWindow() {
		// TODO Auto-generated method stub
	    
		try {
			Set<String> lastWindow  = driver.getWindowHandles();
			 for(String eachId:lastWindow) {
			  driver.switchTo().window(eachId);
              }System.out.println("The brower is successfully switched to the last window");
			 
	    } catch (NoSuchWindowException e) {
			// TODO: handle exception
	    	System.err.println("The browser is not switched to the last window due to the window not found/Exist");
		}catch (WebDriverException e) {
			// TODO: handle exception
	    	System.err.println("The browser is not switched to last window due to unknown error");
		}finally {
			takeSnap();
		}
	}

	public void acceptAlert() {
		// TODO Auto-generated method stub
		try {
			driver.switchTo().alert().accept();
			System.out.println("The alert is successfully accepted in the application");
		} catch (NoAlertPresentException e) {
			// TODO Auto-generated catch block
			System.err.println("The alert is not accepted due to alert not found/Exist in the application");
		}catch (WebDriverException e) {
			// TODO: handle exception
			System.err.println("The alert is not accepted due to the unknown error ");
		}finally {
			takeSnap();
		}
	}

	public void dismissAlert() {
		// TODO Auto-generated method stub
		try {
			driver.switchTo().alert().dismiss();
			System.out.println("The Alert is successfully dismissed in the application");
		} catch (NoAlertPresentException e) {
			// TODO Auto-generated catch block
			System.err.println("The alert is not dissmissed due to the alert not Found/Exist in the application");
		}catch (WebDriverException e) {
			// TODO: handle exception
			System.err.println("The Alert is not dismissed due to unknown errors");
		}finally {
			takeSnap();
		}
	}

	public String getAlertText() {
		// TODO Auto-generated method stub
		String alertText = null;
		try {
			alertText = driver.switchTo().alert().getText();
			System.out.println("The Element with the Alert text displayed "+alertText+" is driven successfully");
		} catch (NoSuchElementException e) {
			System.err.println("The Element with Alert text is not found in the DOM");
			// TODO: handle exception
		}catch (NoAlertPresentException e) {
			// TODO Auto-generated catch block
			System.err.println("The Element with Alert text is not displayed due to Alert not Found/Exist");
		}catch (ElementNotVisibleException e) {
			// TODO: handle exception
			System.err.println("The Element with the Alert text is not visible in the application");
		}catch (ElementNotInteractableException e) {
			// TODO: handle exception
			System.err.println("The Element with Alert text is not interactable with the application");
		}catch (WebDriverException e) {
			// TODO: handle exception
			System.err.println("The Element with Alert text is not successfully driven due to unknown error");
		}finally {
			takeSnap();
		}
		return alertText;
	}
	
	public void takeSnap() {
		// TODO Auto-generated method stub
		try {
			File tmp = driver.getScreenshotAs(OutputType.FILE);
			File dest = new File("./screenshots/snap1.jpg");
			FileUtils.copyFile(tmp, dest);
		} catch (WebDriverException e) {
			// TODO Auto-generated catch block
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			}
}

	public void closeBrowser() {
		// TODO Auto-generated method stub
		try {
			driver.close();
			System.out.println("The active browser is successfully closed");
		} catch (WebDriverException e) {
			// TODO Auto-generated catch block
			System.err.println("The active browser is not closed due to unknown errors");
		}		
	}

	public void closeAllBrowsers() {
		// TODO Auto-generated method stub
		try {
			driver.quit();
		    System.out.println("All the browsers are closed successfully");
		} catch (WebDriverException e) {
			// TODO Auto-generated catch block
			System.err.println("The browsers are not closed due to unknown errors");
		}
	}
	

}
